// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  BOT
  USER
  ADMIN
}

model User {
  id             String           @id @default(cuid())
  email          String           @unique
  name           String
  emp_id         String           @unique
  role           Role             @default(USER)
  created_assets Asset[]
  uploaded_rep   Representation[]
  createAt       DateTime         @default(now())
  updateAt       DateTime?        @updatedAt
}

// 資產
model Asset {
  id             String           @id @default(cuid())
  name           String
  model          String
  createId       String
  creator        User             @relation(fields: [createId], references: [id])
  representation Representation[]
  category       Category         @relation(fields: [categoryId], references: [id])
  categoryId     String
  tags           Tag[]
  createAt       DateTime         @default(now())
  updateAt       DateTime?        @updatedAt
}

// 資產可以有多種格式，代表模型的檔案格式
model Representation {
  id         String    @id @default(cuid())
  path       String?
  type_      String?
  assetId    String
  asset      Asset     @relation(fields: [assetId], references: [id])
  uploaderId String
  uploader   User      @relation(fields: [uploaderId], references: [id])
  createAt   DateTime  @default(now())
  updateAt   DateTime? @updatedAt
}

model Category {
  id       String     @id @default(cuid())
  name     String?
  parentId String?
  parent   Category?  @relation("categoryTree", fields: [parentId], references: [id])
  children Category[] @relation("categoryTree")
  assets   Asset[]
  createAt DateTime   @default(now())
  updateAt DateTime?  @updatedAt
}

model Tag {
  id        String    @id @default(cuid())
  name      String
  assets    Asset[]
  createAt  DateTime  @default(now())
  uopdateAt DateTime? @updatedAt
}
